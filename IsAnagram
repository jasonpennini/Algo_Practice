/**
 * @param {string} s
 * @param {string} t
 * @return {boolean}
//  */
// Given two strings s and t, return true if t is an anagram of s, and false otherwise.

// An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

// Example 1:

// Input: s = "anagram", t = "nagaram"
// Output: true
// Example 2:

// Input: s = "rat", t = "car"
// Output: false
 

// Constraints:

// 1 <= s.length, t.length <= 5 * 104
// s and t consist of lowercase English letters.
 

// Follow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?

var isAnagram = function(s, t) {

if(s.length===t.length) {
    let spreadS = [...s]; 
    let spreadT = [...t];
    spreadS=spreadS.sort()
    spreadT=spreadT.sort()
    console.log(spreadT);
    console.log(spreadS);
    
    for(let i=0; i<spreadT.length; i++) {
        if(spreadS[i]!==spreadT[i]) {
            return false;
        }
    }
    
    return true;
    };
    return false;
}

console.log(isAnagram('anagram', 'nagaram'))
console.log(isAnagram('rat', 'car'))
console.log(isAnagram('grat', 'car'))
console.log(isAnagram('U+0300','U+0003' ))

// Input: s = "anagram", t = "nagaram"
// Output: true
// Example 2:
